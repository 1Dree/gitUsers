{"version":3,"sources":["components/searchBox.js","components/Card.js","components/Cards.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","fn","id","type","placeholder","onKeyDown","Card","img","name","className","src","alt","cardComponent","avatar_url","login","Cards","users","map","App","search","target","setState","searchContent","value","componentDidMount","a","fetch","response","json","console","log","state","this","filteredUsers","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAMeA,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,OAChB,uBAAOC,GAAG,SAASC,KAAK,SAASC,YAAY,SAASC,UAAWJ,KCUpDK,EAXF,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAML,EAAd,EAAcA,KAAd,OACX,sBAAKM,UAAU,OAAf,UACE,8BACE,qBAAKC,IAAKH,EAAKI,IAAI,eAGrB,6BAAKH,IACL,4BAAIL,QCNFS,EAAgB,SAAC,GAAD,IAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,MAAOX,EAA1B,EAA0BA,KAA1B,OACpB,cAAC,EAAD,CAAeI,IAAKM,EAAYL,KAAMM,EAAOX,KAAMA,GAAxCD,IAKEa,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,qBAAKd,GAAG,QAAR,SAAiBc,EAAMC,IAAIL,MC2CzCM,G,wDA5Cb,aAAe,IAAD,8BACZ,gBAQFC,OAAS,gBAAGC,EAAH,EAAGA,OAAH,OAAgB,EAAKC,SAAS,CAAEC,cAAeF,EAAOG,SATjD,EA+BdC,kBA/Bc,sBA+BM,8BAAAC,EAAA,+EAEOC,MAAM,gCAFb,cAEVC,EAFU,gBAIIA,EAASC,OAJb,OAIVZ,EAJU,OAMhB,EAAKK,SAAS,CAAEL,MAAOA,IANP,kDAQhBa,QAAQC,IAAR,MARgB,0DA5BlB,EAAKC,MAAQ,CACXf,MAAO,GACPM,cAAe,IALL,E,qDAWJ,IAAD,EAC0BU,KAAKD,MAA9Bf,EADD,EACCA,MAAOM,EADR,EACQA,cAETW,EAAgBjB,EAAMkB,QAAO,qBAAGpB,MAC9BqB,cAAcC,SAASd,EAAca,kBAG7C,OAAwB,IAAjBnB,EAAMqB,OACX,yCAEA,sBAAKnC,GAAG,MAAR,UACE,8CAEA,cAAC,EAAD,CAAWD,GAAI+B,KAAKb,SAEpB,cAAC,EAAD,CAAOH,MAAOiB,W,GA3BJK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8f334ac3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchBox = ({ fn }) => (\r\n  <input id=\"search\" type=\"search\" placeholder=\"search\" onKeyDown={fn} />\r\n);\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Card = ({ img, name, type }) => (\r\n  <div className=\"card\">\r\n    <div>\r\n      <img src={img} alt=\"user img\" />\r\n    </div>\r\n\r\n    <h2>{name}</h2>\r\n    <p>{type}</p>\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst cardComponent = ({ id, avatar_url, login, type }) => (\r\n  <Card key={id} img={avatar_url} name={login} type={type} />\r\n);\r\n\r\nconst Cards = ({ users }) => <div id=\"cards\">{users.map(cardComponent)}</div>;\r\n\r\nexport default Cards;\r\n","import React, { Component } from \"react\";\nimport SearchBox from \"../components/searchBox\";\nimport Cards from \"../components/Cards\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      users: [],\n      searchContent: \"\",\n    };\n  }\n\n  search = ({ target }) => this.setState({ searchContent: target.value });\n\n  render() {\n    const { users, searchContent } = this.state;\n\n    const filteredUsers = users.filter(({ login }) =>\n      login.toLowerCase().includes(searchContent.toLowerCase())\n    );\n\n    return users.length === 0 ? (\n      <h2>Loading</h2>\n    ) : (\n      <div id=\"app\">\n        <h1>Github Users</h1>\n\n        <SearchBox fn={this.search} />\n\n        <Cards users={filteredUsers} />\n      </div>\n    );\n  }\n\n  componentDidMount = async () => {\n    try {\n      const response = await fetch(\"https://api.github.com/users\");\n\n      const users = await response.json();\n\n      this.setState({ users: users });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}